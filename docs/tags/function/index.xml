<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>function on Bbeaw and binary</title>
        <link>/tags/function/</link>
        <description>Recent content in function on Bbeaw and binary</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <copyright>Except where otherwise noted, content on this site is licensed under a [Creative Commons Attribution 4.0 International license](https://creativecommons.org/licenses/by-sa/4.0/).  &lt;br /&gt;  Blog [Policy](https://www.termsfeed.com/live/63c43686-c465-4d13-bd81-24c77d342b85) </copyright>
        <lastBuildDate>Sat, 06 Jun 2020 00:00:00 +0000</lastBuildDate><atom:link href="/tags/function/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>ลำดับในการเรียก function</title>
        <link>/%E0%B8%A5%E0%B8%B3%E0%B8%94%E0%B8%B1%E0%B8%9A%E0%B9%83%E0%B8%99%E0%B8%81%E0%B8%B2%E0%B8%A3%E0%B9%80%E0%B8%A3%E0%B8%B5%E0%B8%A2%E0%B8%81-function/</link>
        <pubDate>Sat, 06 Jun 2020 00:00:00 +0000</pubDate>
        
        <guid>/%E0%B8%A5%E0%B8%B3%E0%B8%94%E0%B8%B1%E0%B8%9A%E0%B9%83%E0%B8%99%E0%B8%81%E0%B8%B2%E0%B8%A3%E0%B9%80%E0%B8%A3%E0%B8%B5%E0%B8%A2%E0%B8%81-function/</guid>
        <description>&lt;p&gt;ถ้าเรามีใช้ชื่อ function ที่ซ้ำๆ กัน MATLAB จะมีลำดับในการเรียก function เหล่านั้นขึ้นมาใช้
เรารู้อยู่แล้วว่า &lt;code&gt;plot&lt;/code&gt; เป็น built-in function ของ MATLAB ถ้าเรายังจะดื้อดึงในการสร้างไฟล์ function ที่ชื่อ &lt;code&gt;plot&lt;/code&gt; เหมือนกันขึ้นมาอีกจะเกิดอะไรขึ้น MATLAB จะเรียกใช้ตัวไหนก่อน เรามาดูกัน&lt;/p&gt;
&lt;p&gt;แค่เราสร้าง &lt;em&gt;plot.m&lt;/em&gt; MATLAB ก็จะทำการเตือนก่อน&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#93a1a1;background-color:#002b36;-moz-tab-size:1;-o-tab-size:1;tab-size:1;&#34;&gt;&lt;code class=&#34;language-MATLAB&#34; data-lang=&#34;MATLAB&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Warning: Function plot has the same name as a MATLAB builtin. We
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;suggest you rename the &lt;span style=&#34;color:#719e07&#34;&gt;function&lt;/span&gt; to avoid a potential name conflict. 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Warning: Function plot has the same name as a MATLAB builtin. We
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;suggest you rename the &lt;span style=&#34;color:#719e07&#34;&gt;function&lt;/span&gt; to avoid a potential name conflict. 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ในโค้ด มีคำสั่งง่ายๆ แบบนี้&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#93a1a1;background-color:#002b36;-moz-tab-size:1;-o-tab-size:1;tab-size:1;&#34;&gt;&lt;code class=&#34;language-MATLAB&#34; data-lang=&#34;MATLAB&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;plot&lt;/span&gt;(x,y)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b58900&#34;&gt;disp&lt;/span&gt;(x)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b58900&#34;&gt;disp&lt;/span&gt;(x)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ใน command line พิมพ์ว่า&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#93a1a1;background-color:#002b36;-moz-tab-size:1;-o-tab-size:1;tab-size:1;&#34;&gt;&lt;code class=&#34;language-MATLAB&#34; data-lang=&#34;MATLAB&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plot([&lt;span style=&#34;color:#2aa198&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#2aa198&#34;&gt;10&lt;/span&gt;],[&lt;span style=&#34;color:#2aa198&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#2aa198&#34;&gt;10&lt;/span&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ผลลัพธ์ก็คือ&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#93a1a1;background-color:#002b36;-moz-tab-size:1;-o-tab-size:1;tab-size:1;&#34;&gt;&lt;code class=&#34;language-MATLAB&#34; data-lang=&#34;MATLAB&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;1&lt;/span&gt;     &lt;span style=&#34;color:#2aa198&#34;&gt;2&lt;/span&gt;     &lt;span style=&#34;color:#2aa198&#34;&gt;3&lt;/span&gt;     &lt;span style=&#34;color:#2aa198&#34;&gt;4&lt;/span&gt;     &lt;span style=&#34;color:#2aa198&#34;&gt;5&lt;/span&gt;     &lt;span style=&#34;color:#2aa198&#34;&gt;6&lt;/span&gt;     &lt;span style=&#34;color:#2aa198&#34;&gt;7&lt;/span&gt;     &lt;span style=&#34;color:#2aa198&#34;&gt;8&lt;/span&gt;     &lt;span style=&#34;color:#2aa198&#34;&gt;9&lt;/span&gt;    &lt;span style=&#34;color:#2aa198&#34;&gt;10&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;1&lt;/span&gt;     &lt;span style=&#34;color:#2aa198&#34;&gt;2&lt;/span&gt;     &lt;span style=&#34;color:#2aa198&#34;&gt;3&lt;/span&gt;     &lt;span style=&#34;color:#2aa198&#34;&gt;4&lt;/span&gt;     &lt;span style=&#34;color:#2aa198&#34;&gt;5&lt;/span&gt;     &lt;span style=&#34;color:#2aa198&#34;&gt;6&lt;/span&gt;     &lt;span style=&#34;color:#2aa198&#34;&gt;7&lt;/span&gt;     &lt;span style=&#34;color:#2aa198&#34;&gt;8&lt;/span&gt;     &lt;span style=&#34;color:#2aa198&#34;&gt;9&lt;/span&gt;    &lt;span style=&#34;color:#2aa198&#34;&gt;10&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;หมายความว่า MATLAB เลือกที่จะเรียก &lt;em&gt;plot.m&lt;/em&gt; ที่เราสร้างขึ้นมากกว่าจะเรียกจาก  built-in function&lt;/p&gt;
&lt;p&gt;อีกตัวอย่างนึง ถ้ามี function สมมุติว่าชื่อ &lt;em&gt;Duplic1.m&lt;/em&gt; ที่อยู่ใน &lt;em&gt;Current Folder&lt;/em&gt; กับ &lt;em&gt;Duplic1.m&lt;/em&gt; ที่อยู่ใน path &lt;em&gt;/path/Duplic1.m&lt;/em&gt; ที่ได้ทำการ add path เรียบร้อย เราจะมาดูสิว่า MATLAB จะเลือกเรียกใชังานตัวไหนก่อน&lt;/p&gt;
&lt;p&gt;โค้ดใน &lt;em&gt;Duplic1.m&lt;/em&gt; คือ&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#93a1a1;background-color:#002b36;-moz-tab-size:1;-o-tab-size:1;tab-size:1;&#34;&gt;&lt;code class=&#34;language-MATLAB&#34; data-lang=&#34;MATLAB&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;Duplic1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b58900&#34;&gt;disp&lt;/span&gt;(&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39;Dupli1 in current path&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;และโค้ดใน &lt;em&gt;/path/Duplic1.m&lt;/em&gt; คือ&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#93a1a1;background-color:#002b36;-moz-tab-size:1;-o-tab-size:1;tab-size:1;&#34;&gt;&lt;code class=&#34;language-MATLAB&#34; data-lang=&#34;MATLAB&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;Duplic1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b58900&#34;&gt;disp&lt;/span&gt;(&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39;Dupli1 in added path&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ผลลัพธ์คือ&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#93a1a1;background-color:#002b36;-moz-tab-size:1;-o-tab-size:1;tab-size:1;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Dupli1 in current path
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;หมายความว่า MATLAB จะเลือกใน &lt;em&gt;Current Folder&lt;/em&gt; ก่อนใน added path&lt;/p&gt;
&lt;p&gt;สรุปง่ายๆ การเรียกใช้ function จะเป็นไปตามเอกสาร &lt;a class=&#34;link&#34; href=&#34;https://www.mathworks.com/help/matlab/matlab_prog/function-precedence-order.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;function procedure order&lt;/a&gt; นี้ ทางดีที่สุดคือ พยายามไม่ใช่ชื่อช้ำกัน หรือ ถ้ามี function อะไรไม่รู้ที่ add อยู่ path หรือไม่แน่ใจว่าเราเลือกชื่อถูกตามที่ต้องการรึป่าว ให้เช็คด้วยคำสั่ง &lt;code&gt;which&lt;/code&gt; ตามด้วยชื่อ function มันก็จะบอกว่า function ที่ใช้งานนี้อยู่ใน location ไหน&lt;/p&gt;
&lt;hr&gt;
</description>
        </item>
        <item>
        <title>แอบดู Variable</title>
        <link>/%E0%B9%81%E0%B8%AD%E0%B8%9A%E0%B8%94%E0%B8%B9-variable/</link>
        <pubDate>Thu, 28 May 2020 00:00:00 +0000</pubDate>
        
        <guid>/%E0%B9%81%E0%B8%AD%E0%B8%9A%E0%B8%94%E0%B8%B9-variable/</guid>
        <description>&lt;h4 id=&#34;who-สอดสองตวแปร&#34;&gt;who สอดส่องตัวแปร&lt;/h4&gt;
&lt;p&gt;เมื่อเราสร้าง function ขึ้นมาอันหนึ่ง ตัวแปรที่อยู่ใน function จะไม่ปรากฏบน base workspace แต่ถ้าเราอยากรู้ว่าระหว่างที่รันนั้น มีตัวแปรอะไรบ้าง มีคุณสมบัติอะไร ถ้าไม่ทำการ &lt;em&gt;Debug&lt;/em&gt;  มีอีกวิธีนึงก็คือ การใช้ &lt;em&gt;whos&lt;/em&gt; (&lt;em&gt;who&lt;/em&gt; เฉยๆ จะบอกแค่ชื่อแต่ &lt;em&gt;whos&lt;/em&gt; จะบอกมากกว่านั้น) แทรกลงไปในโค้ดไปเลย
เมื่อโปรแกรมรันผ่าน มันก็จะแสดงผลออกมาทาง command line&lt;/p&gt;
&lt;p&gt;ในตัวอย่างนี้ เรามี function ชื่อ &lt;em&gt;EP6_FnWs&lt;/em&gt; ที่รับตัวแปร &lt;em&gt;a&lt;/em&gt; และ &lt;em&gt;b&lt;/em&gt; เอามาบวกกันโดย function หลัก และคูณกันโดย &lt;em&gt;nested function&lt;/em&gt; ก็จะเขียน &lt;code&gt;EP6_FnWs.m&lt;/code&gt; ได้ออกมาดังนี้ โดยเราจะทำการแทรก &lt;em&gt;whos&lt;/em&gt; ใน function หลัก และ nested function&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#93a1a1;background-color:#002b36;-moz-tab-size:1;-o-tab-size:1;tab-size:1;&#34;&gt;&lt;code class=&#34;language-MATLAB&#34; data-lang=&#34;MATLAB&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;function&lt;/span&gt; output = &lt;span style=&#34;color:#268bd2&#34;&gt;EP6_FnWs&lt;/span&gt;(a,b)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;output(&lt;span style=&#34;color:#2aa198&#34;&gt;1&lt;/span&gt;) = a &lt;span style=&#34;color:#719e07&#34;&gt;+&lt;/span&gt; b;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;output(&lt;span style=&#34;color:#2aa198&#34;&gt;2&lt;/span&gt;) = nested_fn(a,b);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b58900&#34;&gt;disp&lt;/span&gt;(&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39;Output from whos is below in EP6_FnWs&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;whos
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b58900&#34;&gt;disp&lt;/span&gt;(&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39;-------------end---------------&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#586e75&#34;&gt;% nested function&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;    function&lt;/span&gt; output_n = &lt;span style=&#34;color:#268bd2&#34;&gt;nested_fn&lt;/span&gt;(a_n,b_n)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        output_n = (a_n&lt;span style=&#34;color:#719e07&#34;&gt;*&lt;/span&gt;b_n);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#b58900&#34;&gt;disp&lt;/span&gt;(&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39;Output from whos is below in nested function&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        whos
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#b58900&#34;&gt;disp&lt;/span&gt;(&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39;-------------end---------------&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#719e07&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;ผลลพธจากการแอบสอง&#34;&gt;ผลลัพธ์จากการแอบส่อง&lt;/h4&gt;
&lt;p&gt;ผลลัพธ์ที่แสดงบน command line คือ&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#93a1a1;background-color:#002b36;-moz-tab-size:1;-o-tab-size:1;tab-size:1;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Output from whos is below in nested function
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Name          Size            Bytes  Class     Attributes
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ---- EP6_FnWs/nested_fn ---------------------------------
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  a_n           1x1                 8  double              
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  b_n           1x1                 8  double              
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  output_n      1x1                 8  double              
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ---- EP6_FnWs -------------------------------------------
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  a             1x1                 8  double              
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  b             1x1                 8  double              
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  output        1x1                 8  double              
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-------------end---------------
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Output from whos is below in EP6_FnWs
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Name        Size            Bytes  Class     Attributes
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  a           1x1                 8  double              
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  b           1x1                 8  double              
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  output      1x2                16  double              
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-------------end---------------
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;จะสังเกตได้ว่า เมื่อ &lt;em&gt;whos&lt;/em&gt; อยู่ใน nested function มันจะแสดงตัวแปรทั้ง functionหลัก และ nested function ณ ขณะนั้น output ยังมี ขนาด 1x1 ที่มาจากการทำงานของ function หลักในบรรทัดก่อน หลังจากเสร็จสิ้น การทำงานของ function หลักและ nested function &lt;em&gt;whos&lt;/em&gt; ที่ตอนนี้อยู่ใน function หลักก็จะแสดงแค่ตัวแปรที่อยู่ใน function หลักเท่านั้น&lt;/p&gt;
&lt;p&gt;นอกจากนี้ ยังแอบสอดส่อง variable ที่เก็บอยู่ใน MAT-file (*.mat) (ไฟล์ที่เอาไว้เก็บค่าตัวแปร อันนี้ไม่ใช่ .m ที่เป็น MATLAB script) โดยการ&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#93a1a1;background-color:#002b36;-moz-tab-size:1;-o-tab-size:1;tab-size:1;&#34;&gt;&lt;code class=&#34;language-MATLAB&#34; data-lang=&#34;MATLAB&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;whos &lt;span style=&#34;color:#719e07&#34;&gt;-&lt;/span&gt;file filename
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;อย่าลืมถ้าเรียกเป็นชื่อตรงๆ ใส่ &amp;rsquo;&amp;rsquo; ครอบชื่อไฟล์ไว้ด้วย ไม่งั้นมันอาจจะคิดว่าเป็นตัวแปร&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Analytic plot สร้างกราฟแบบ analytic</title>
        <link>/analytic-plot-%E0%B8%AA%E0%B8%A3%E0%B9%89%E0%B8%B2%E0%B8%87%E0%B8%81%E0%B8%A3%E0%B8%B2%E0%B8%9F%E0%B9%81%E0%B8%9A%E0%B8%9A-analytic/</link>
        <pubDate>Tue, 19 May 2020 00:00:00 +0000</pubDate>
        
        <guid>/analytic-plot-%E0%B8%AA%E0%B8%A3%E0%B9%89%E0%B8%B2%E0%B8%87%E0%B8%81%E0%B8%A3%E0%B8%B2%E0%B8%9F%E0%B9%81%E0%B8%9A%E0%B8%9A-analytic/</guid>
        <description>&lt;p&gt;โดยส่วนใหญ่ MATLAB จะดีลกับข้อมูลที่เป็น numeric ฉะนั้นเวลาเราพล๊อตกราฟก็จะใช้ค่าข้อมูลที่เป็น numeric มาพล๊อตกัน บางครั้งถ้าเรามีสมการนึงที่อาจจะอ้างอิงมาจากทฤษฎี เราก็สามารถพล๊อตแบบ analytic ได้เหมือนกัน กล่าวคือไม่ต้องมานั่งแทนค่า เพื่อให้ได้ค่าข้อมูล numeric แล้วนำ ค่า numeric มาพล๊อตอีกที ซึ่งเสียเวลาและเพิ่ม vector แบบไม่จำเป็นลงใน workspace อีก&lt;/p&gt;
&lt;p&gt;ในโพสต์นี้ เราจะลองพล๊อตแบบ analytic กัน ซึ่งใน &lt;code&gt;MATLAB&lt;/code&gt; ก็จะมี ฟังก์ชันตระกูล &lt;code&gt;fplot&lt;/code&gt;, &lt;code&gt;fplot3&lt;/code&gt;, &lt;code&gt;fsurf&lt;/code&gt;, &lt;code&gt;fcontour&lt;/code&gt;, &lt;code&gt;fmesh&lt;/code&gt;, &lt;code&gt;implicity&lt;/code&gt;, &lt;code&gt;fimplicity3&lt;/code&gt;  ที่อยู่ใน &lt;em&gt;Symbolic Math Toolbox&lt;/em&gt; สังเกตว่าคำสั่งเหล่านี้มีชื่อคล้ายๆ กับคำสั่งที่ใช้พล๊อตแบบ numeric เพียงแต่มี prefix &lt;em&gt;f-&lt;/em&gt; นำหน้า เราลงมือกันเลยดีกว่า&lt;/p&gt;
&lt;h3 id=&#34;ตวอยางการพลอต-function-sinx&#34;&gt;ตัวอย่างการพล๊อต function &lt;code&gt;sin(x)&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;เริ่มต้นที่การสร้างตัวแปรโดยใช้คำสั่ง &lt;code&gt;syms&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#93a1a1;background-color:#002b36;-moz-tab-size:1;-o-tab-size:1;tab-size:1;&#34;&gt;&lt;code class=&#34;language-MATLAB&#34; data-lang=&#34;MATLAB&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;syms x
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;สังเกตว่าใน variable workspace มีตัวแปร x ที่มีคลาสเป็น &lt;code&gt;sym&lt;/code&gt; จากนั้นลองพล๊อต function sin&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#93a1a1;background-color:#002b36;-moz-tab-size:1;-o-tab-size:1;tab-size:1;&#34;&gt;&lt;code class=&#34;language-MATLAB&#34; data-lang=&#34;MATLAB&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fplot(&lt;span style=&#34;color:#b58900&#34;&gt;sin&lt;/span&gt;(x))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;มันจะเลือกช่วงของ x ให้อัตโนมัติ ถ้าจะเลือกช่วงเองก็ทำได้โดยกำหนดช่วง&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#93a1a1;background-color:#002b36;-moz-tab-size:1;-o-tab-size:1;tab-size:1;&#34;&gt;&lt;code class=&#34;language-MATLAB&#34; data-lang=&#34;MATLAB&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fplot(&lt;span style=&#34;color:#b58900&#34;&gt;sin&lt;/span&gt;(x),[&lt;span style=&#34;color:#2aa198&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#2aa198&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#b58900&#34;&gt;pi&lt;/span&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;อีกตัวอย่าง ถ้าจะพล๊อตสมการเดียวแต่มีค่า argument ที่ต่างกัน เช่น &lt;strong&gt;sin(ax)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;ที่มี argument คือ a แต่เราต้องการให้มีค่าต่างๆ เช่น 1,2 และ 3 สามารถทำได้โดยการเรียกใช้ &lt;code&gt;subs&lt;/code&gt;
เพื่อแทนค่า argument ด้วยค่า&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#93a1a1;background-color:#002b36;-moz-tab-size:1;-o-tab-size:1;tab-size:1;&#34;&gt;&lt;code class=&#34;language-MATLAB&#34; data-lang=&#34;MATLAB&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#586e75&#34;&gt;% declear x and a as symbolic&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;syms x a
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#586e75&#34;&gt;% plot symbolic but substitute a with [1,2,3]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fplot(subs(&lt;span style=&#34;color:#b58900&#34;&gt;sin&lt;/span&gt;(a&lt;span style=&#34;color:#719e07&#34;&gt;*&lt;/span&gt;x)),a,[&lt;span style=&#34;color:#2aa198&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#2aa198&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#2aa198&#34;&gt;3&lt;/span&gt;]))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;เสนกราฟของเทอมคณตศาสตรเปะๆ&#34;&gt;เส้นกราฟของเทอมคณิตศาสตร์เป๊ะๆ&lt;/h3&gt;
&lt;p&gt;ถามว่าทำไมต้องใช้ analytic plot คำตอบก็คือเราจะเส้นสมการแบบเป๊ะๆ แต่ถ้าใช้การแทนค่าในสมการเอาแล้วพล๊อตแบบ numeric ธรรมดามันก็พอใช่แทนได้ แต่จุดแต่ละจุดต้องต่อๆ กัน ไม่งั้นเวลาเรา fit curve เส้นกราฟ ที่ได้จะไม่ถูกต้องตามสมการ ขอลอกตัวอย่างจากเว็บ matlab ตาม&lt;a class=&#34;link&#34; href=&#34;https://www.mathworks.com/help/symbolic/examples/analytical-plotting-with-symbolic-math-toolbox.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ลิ้งค์นี้&lt;/a&gt; ในหัวข้อ &lt;em&gt;Mix Symblic and Numeric techniques to develop mathematical models&lt;/em&gt; ตามโค้ดดังต่อไปนี้&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#93a1a1;background-color:#002b36;-moz-tab-size:1;-o-tab-size:1;tab-size:1;&#34;&gt;&lt;code class=&#34;language-MATLAB&#34; data-lang=&#34;MATLAB&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;syms f(x)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;f(x) = x&lt;span style=&#34;color:#719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#b58900&#34;&gt;exp&lt;/span&gt;(&lt;span style=&#34;color:#719e07&#34;&gt;-&lt;/span&gt;x)&lt;span style=&#34;color:#719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#b58900&#34;&gt;sin&lt;/span&gt;(&lt;span style=&#34;color:#2aa198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;*&lt;/span&gt;x) &lt;span style=&#34;color:#719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;2&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xs = &lt;span style=&#34;color:#2aa198&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#2aa198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#2aa198&#34;&gt;3&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ys = double(subs(f,xs));
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fplot(f,[&lt;span style=&#34;color:#2aa198&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#2aa198&#34;&gt;3&lt;/span&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hold on
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plot(xs,ys,&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39;*k&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39;DisplayName&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39;Data Points&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fplot(@(x) spline(xs,ys,x),[&lt;span style=&#34;color:#2aa198&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#2aa198&#34;&gt;3&lt;/span&gt;],&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39;DisplayName&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39;Spline interpolant&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hold off
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grid on
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;legend show
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ผลลัพธ์
&lt;img src=&#34;/mfiles/EP5.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;graph&#34;
	
	
&gt;
จากกราฟเราจะเห็นว่าถ้าจุดไม่ติดกัน เวลาเรา fit curve (เส้นแดง) จะได้เส้นที่คลาดกับ เส้นที่เราพล๊อตจากสมการ (เส้นสีน้ำเงิน)&lt;/p&gt;
&lt;p&gt;นอกจากนี้เนื่องจากมันเป็นแบบ analytic เราสามารถ &lt;code&gt;diff&lt;/code&gt; หรือ &lt;code&gt;int&lt;/code&gt; กับเทอม (symbolic term) นั้นได้เลย&lt;/p&gt;
&lt;p&gt;สำหรับ function analytic plot แบบอื่นๆ ก็ใช้ในลักษณะเดียวกัน&lt;/p&gt;
</description>
        </item>
        <item>
        <title>structure อีกรูปแบบหนึ่งในการเก็บข้อมูล</title>
        <link>/structure-%E0%B8%AD%E0%B8%B5%E0%B8%81%E0%B8%A3%E0%B8%B9%E0%B8%9B%E0%B9%81%E0%B8%9A%E0%B8%9A%E0%B8%AB%E0%B8%99%E0%B8%B6%E0%B9%88%E0%B8%87%E0%B9%83%E0%B8%99%E0%B8%81%E0%B8%B2%E0%B8%A3%E0%B9%80%E0%B8%81%E0%B9%87%E0%B8%9A%E0%B8%82%E0%B9%89%E0%B8%AD%E0%B8%A1%E0%B8%B9%E0%B8%A5/</link>
        <pubDate>Mon, 11 May 2020 00:00:00 +0000</pubDate>
        
        <guid>/structure-%E0%B8%AD%E0%B8%B5%E0%B8%81%E0%B8%A3%E0%B8%B9%E0%B8%9B%E0%B9%81%E0%B8%9A%E0%B8%9A%E0%B8%AB%E0%B8%99%E0%B8%B6%E0%B9%88%E0%B8%87%E0%B9%83%E0%B8%99%E0%B8%81%E0%B8%B2%E0%B8%A3%E0%B9%80%E0%B8%81%E0%B9%87%E0%B8%9A%E0%B8%82%E0%B9%89%E0%B8%AD%E0%B8%A1%E0%B8%B9%E0%B8%A5/</guid>
        <description>&lt;p&gt;หลายๆ คนคงจะคุ้นเคยกับการใช้ vector array กับ cell array เป็นอย่างดีแล้ว มีอีกตัวนึงที่อยากให้รู้จัก และใช้กันแพร่หลายในการเก็บตัวแปรต่างๆ ซึ่งตัวนั้นก็คือ structure ถ้าบอกว่า structure ก็คือ object class แบบนึงของ MATLAB ก็คงไม่ผิดนัก ข้อดีของการเก็บข้อมูลแบบนี้ก็คือ เก็บได้ข้อมูลได้หลายประเภทโดยใช้ field ในการกำหนดหัวข้อคอลัมภ์&lt;/p&gt;
&lt;p&gt;ตัวอย่างการใช้งาน&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#93a1a1;background-color:#002b36;-moz-tab-size:1;-o-tab-size:1;tab-size:1;&#34;&gt;&lt;code class=&#34;language-MATLAB&#34; data-lang=&#34;MATLAB&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;x = [&lt;span style=&#34;color:#2aa198&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#2aa198&#34;&gt;1E6&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;beam.posx = x;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;beam.unitx = &lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39;mm&amp;#39;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;จากตัวอย่างข้างต้นเราสร้าง&lt;/p&gt;
&lt;p&gt;structure ที่มีชื่อว่า beam โดยมี field 2 field ชื่อ posx และ unitx โดย filed posx เก็บค่าชนิด vector array ส่วน field unitx เก็บค่าชนิด cell&lt;/p&gt;
&lt;p&gt;ถ้าเรามี 2 object beam เราก็สามารถนำมาสร้างเป็น structure array ได้คล้ายๆ cell array&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#93a1a1;background-color:#002b36;-moz-tab-size:1;-o-tab-size:1;tab-size:1;&#34;&gt;&lt;code class=&#34;language-MATLAB&#34; data-lang=&#34;MATLAB&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#586e75&#34;&gt;% first &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;x1 = [&lt;span style=&#34;color:#2aa198&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#2aa198&#34;&gt;1E6&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;beam(&lt;span style=&#34;color:#2aa198&#34;&gt;1&lt;/span&gt;).posx = x1;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;beam(&lt;span style=&#34;color:#2aa198&#34;&gt;1&lt;/span&gt;).unitx = &lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39;mm&amp;#39;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#586e75&#34;&gt;% second&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;x2 = [&lt;span style=&#34;color:#2aa198&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#2aa198&#34;&gt;1E3&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;beam(&lt;span style=&#34;color:#2aa198&#34;&gt;2&lt;/span&gt;).posx = x2;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;beam(&lt;span style=&#34;color:#2aa198&#34;&gt;2&lt;/span&gt;).unitx = &lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39;cm&amp;#39;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ถ้าทำ operate แบบ loop ก็ใช้ structfun ตามที่ blog ก่อนเคยเกริ่นไว้ก่อนหน้านี้
นอกจากนี้ มี function อื่นที่ใช้ร่วมกับ structure เพื่อดึงข้อมูล เช่น fieldname เพื่อดึงว่ามี fieldname อะไรบ้าง setfield เป็นการ set ค่าให้ structure ของ field ที่กำหนด&lt;/p&gt;
&lt;p&gt;นอกจากนี้ยังมี function อื่นๆที่เอาไว้ใช้งาน ถ้ามองในมุมมองของ object class fieldname ก็เปรียบเสมือนเป็น properties ของ obj class structure นั่นเอง&lt;/p&gt;
&lt;p&gt;เนื่องจากตัว structure สามารถเก็บข้อมูลได้หลากหลาย แยกได้ตาม field ดังนั้นมันมักจะถูกใช้เก็บงานที่มาจาก GUI เพราะส่วนใหญ่ข้อมูล inquiry input เดิมๆ แล้วเวลา share ข้อมูลระหว่าง GUI ใน app เดียวกัน ก็ส่งแค่ stureture array อันเดียวก็จะได้รับข้อมูลทั้งหมด&lt;/p&gt;
</description>
        </item>
        <item>
        <title>ฟังก์ชันบน array แบบไม่วน loop</title>
        <link>/%E0%B8%9F%E0%B8%B1%E0%B8%87%E0%B8%81%E0%B9%8C%E0%B8%8A%E0%B8%B1%E0%B8%99%E0%B8%9A%E0%B8%99-array-%E0%B9%81%E0%B8%9A%E0%B8%9A%E0%B9%84%E0%B8%A1%E0%B9%88%E0%B8%A7%E0%B8%99-loop/</link>
        <pubDate>Sun, 10 May 2020 00:00:00 +0000</pubDate>
        
        <guid>/%E0%B8%9F%E0%B8%B1%E0%B8%87%E0%B8%81%E0%B9%8C%E0%B8%8A%E0%B8%B1%E0%B8%99%E0%B8%9A%E0%B8%99-array-%E0%B9%81%E0%B8%9A%E0%B8%9A%E0%B9%84%E0%B8%A1%E0%B9%88%E0%B8%A7%E0%B8%99-loop/</guid>
        <description>&lt;h2 id=&#34;ทำซำแบบไมใช-loop&#34;&gt;ทำซ้ำแบบไม่ใช้ loop&lt;/h2&gt;
&lt;p&gt;โดยปกติ เราจะใช้ทำ operate บน vector array สักอันเรา เรามักจะใช้การวนลูป เช่น for loop โดยในแต่ละ loop จะ operate ตามแต่ตัวของ array โดยใช้ index เป็นเปลียนค่าเมื่อต้องการวน loop  ใหม่&lt;/p&gt;
&lt;p&gt;ตัวอย่างเช่น ถ้าจะให้ vertor x ในแต่ละ index มีค่ายกกำลังสอง ถ้าเขียนแบบ loop ก็จะเขียนได้ว่า&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#93a1a1;background-color:#002b36;-moz-tab-size:1;-o-tab-size:1;tab-size:1;&#34;&gt;&lt;code class=&#34;language-MATLAB&#34; data-lang=&#34;MATLAB&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;x = [&lt;span style=&#34;color:#2aa198&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#2aa198&#34;&gt;10&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#b58900&#34;&gt;i&lt;/span&gt;=&lt;span style=&#34;color:#2aa198&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#2aa198&#34;&gt;10&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  result(&lt;span style=&#34;color:#b58900&#34;&gt;i&lt;/span&gt;) = x(&lt;span style=&#34;color:#b58900&#34;&gt;i&lt;/span&gt;)&lt;span style=&#34;color:#719e07&#34;&gt;.^&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;แต่ถ้าไม่อยากเขียน loop แบบนี้ จะสามารถทำอย่างไรได้บ้าง คำตอบก็คือ มี built-in function ใน MATLAB ในตระกูล fun เช่น arrayfun, cellfun, structfun ที่ทำหน้าที่ให้การ apply function ลงในแต่ละ index ของตัวแปรต้น ถ้าตัวแปรต้นเป็นชนิด array เราก็เลือก function arrayfun แต่ถ้าตัวแปรต้นเป็น array cell ก็ใช้เลือกใช้ cellfun หรือเป็น structure(เป็น built-in class ปกติใช้เก็บข้อมูลที่มีความซับซ้อนและหลากหลาย) ก็เลือกใช้ structfun&lt;/p&gt;
&lt;p&gt;ถ้าลองเขียนโค้ดใหม่เพื่อให้ได้ผลลัพธ์ตามตัวอย่างข้างบน จะได้&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#93a1a1;background-color:#002b36;-moz-tab-size:1;-o-tab-size:1;tab-size:1;&#34;&gt;&lt;code class=&#34;language-MATLAB&#34; data-lang=&#34;MATLAB&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;x = [&lt;span style=&#34;color:#2aa198&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#2aa198&#34;&gt;10&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;result  = arrayfun(@(u) u^&lt;span style=&#34;color:#2aa198&#34;&gt;2&lt;/span&gt;, x)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ถ้าเรามีจำนวนตัวแปรต้น array เพิ่มหนึ่งตัวก็สามารถเขียนได้ตามตัวอย่าง&lt;/p&gt;
&lt;p&gt;ตัวอย่าง&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#93a1a1;background-color:#002b36;-moz-tab-size:1;-o-tab-size:1;tab-size:1;&#34;&gt;&lt;code class=&#34;language-MATLAB&#34; data-lang=&#34;MATLAB&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;x = [&lt;span style=&#34;color:#2aa198&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#2aa198&#34;&gt;10&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;y = [&lt;span style=&#34;color:#2aa198&#34;&gt;10&lt;/span&gt;:&lt;span style=&#34;color:#2aa198&#34;&gt;1&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;result = arrayfun(@(u,v) u^&lt;span style=&#34;color:#2aa198&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;+&lt;/span&gt;v^&lt;span style=&#34;color:#2aa198&#34;&gt;2&lt;/span&gt;, x,y)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;โดยปกติการเรียกใช้ function จะใช้แบบ anomynous (เช่น @(u,v) u^2+v^2)
หรือถ้า function มันยาวก็เขียน function ใหม่เขียนมาภายใน script เดียวกัน หรือจะเขียนแยกอีก .m ไฟล์ก็ได้ (อย่าลืม add path)&lt;/p&gt;
&lt;p&gt;บางครั้งผลลัพธ์ที่ได้ไม่สามารถเขียนในรูป Uniform ได้ มันจะทักเรา&lt;/p&gt;
&lt;p&gt;ถ้าเรา apply function แล้วได้ผลลัพธ์ที่ไม่ Uniform เช่นถ้าผลลัพธ์คือ&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#93a1a1;background-color:#002b36;-moz-tab-size:1;-o-tab-size:1;tab-size:1;&#34;&gt;&lt;code class=&#34;language-MATLAB&#34; data-lang=&#34;MATLAB&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;result(&lt;span style=&#34;color:#2aa198&#34;&gt;1&lt;/span&gt;) = &lt;span style=&#34;color:#2aa198&#34;&gt;1&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;result(&lt;span style=&#34;color:#2aa198&#34;&gt;2&lt;/span&gt;) = ‘City’;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;result(&lt;span style=&#34;color:#2aa198&#34;&gt;3&lt;/span&gt;) = &lt;span style=&#34;color:#2aa198&#34;&gt;1E2&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ให้เราใส่ ให้ใส่ ‘UniformOutput’ เป็น 0 หรือ false&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#93a1a1;background-color:#002b36;-moz-tab-size:1;-o-tab-size:1;tab-size:1;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;arrayfun(func, x,  ‘UniformOutput’, 0)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ผลลัพธ์ที่ได้จะอยู่ในรูปแบบ cell array ที่มี output ในแต่ละ cell array นั้นๆ&lt;/p&gt;
&lt;p&gt;ฉะนั้นถ้าเอาตัวอย่างแรกมาใส่ ‘UniformOutput’ เป็น 0&lt;/p&gt;
&lt;p&gt;ความแตกต่างของผลลัพธ์ระหว่างการใส่ค่า ‘UniformOutput’ เป็น 0 กับ 1 คือ&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;สำหรับ ‘UniformOutput’ 0&lt;br&gt;
y{1} = ‘1’, y{2}=‘4’, y{3} = ‘9’ .. ; cell array ขนาด 1x10&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;สำหรับ ‘UniformOutput’ 1&lt;br&gt;
y(1)=1, y(2)=4, y(3)=9 .. ; vector array ขนาด 1x10&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ข้อดีของการใช้ funtion ตระกูล fun จะมีการคำนวณที่เร็วขึ้นเมื่อใช้งานแบบ paralell computating นั่นหมายความว่าเราสามารถวน loop ได้พร้อมๆ กัน
โดยปกติการใช้งานทั่วๆ ไปไม่ได้ไปถึงขัั้นนั้นกันหรอก อย่างน้อยมันก็สะดวกเวลาเขียนโค้ดเพราะไม่ต้องมาเสียเวลานั่งวน loop&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
